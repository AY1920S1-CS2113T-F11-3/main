{"receivedDateTime":"2019-10-18T05:37:54Z","subject":"LumiNUS: CS2113/...: Announcement New: Clarifications regarding the project","@odata.etag":"W/\"CQAAABYAAAAdYQpmLnggSLqRTPf5d3WKAAE+TBY+\"","from":{"emailAddress":{"address":"dcsaksh@nus.edu.sg","name":"Akshay Narayan"}},"id":"AAMkADdlMWIxZjIxLTM2MzItNGM4ZC05MzM2LWVkM2Y3ZTgzZjhlYwBGAAAAAAAKOW1qChwVQ7G8kcDZ0iuVBwAdYQpmLnggSLqRTPf5d3WKAAAAAAEMAAAdYQpmLnggSLqRTPf5d3WKAAE_iox7AAA=","body":{"contentType":"html","content":"<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n<\/head>\r\n<body>\r\n<p>Dear all,&nbsp;<\/p>\r\n<p>[Long mail/announcement alert!]<\/p>\r\n<p>Based on talking to your tutors and few of you I think there is a need to<br>\r\nclarify a few things regarding the project.<\/p>\r\n<p><strong>1. Feature/LOC and the relation<\/strong><\/p>\r\n<p>I mentioned two things last week:<\/p>\r\n<ol>\r\n<li>You should have something end-to-end to call it your feature/contribution to the project.\r\n<\/li><li>You should write about 300-500 lines of functional code. <\/li><\/ol>\r\n<p>I guess many of you interpreted it as feature being 300-500 lines of code. I<br>\r\nwant to clarify on this issue as it is quite open to interpretation.<\/p>\r\n<p>You can have a feature that is small (if you choose to do so), but other<br>\r\ncontributions such as bug fixing, helping another teammate to complete the work,<br>\r\nworking on something that is used by everyone (e.g., some infrastructure<br>\r\ncomponent in the project), etc., can add up to 300-500 LoC. It is not necessary<br>\r\nthat the feature should be ~500 LoC.<\/p>\r\n<p>Your feature will be used to grade the depth of your design and implementation.<br>\r\nThe code you contribute will be used to grade your code quality in addition to<br>\r\nthe implementation. To assess the code quality we need at least 300-500 lines of<br>\r\nfunctional code.<\/p>\r\n<hr>\r\n<p><strong>2. What is a feature?<\/strong><\/p>\r\n<p>Unfortunately, there is NO &quot;one rule to identify a feature&quot;. You can still use<br>\r\nthe examples I mentioned in the lecture as guidelines (person management,<br>\r\nhistory comprising undo/redo). However, if you are only thinking of a command<br>\r\n(e.g., adding a person to the contact list), that is not considered as a feature<br>\r\non its own. If I suspected such instances in your submission (UG/DG in week 7) I<br>\r\nhave made a note about it in the comments.<\/p>\r\n<p>Feel free to talk to me for further clarification.<\/p>\r\n<hr>\r\n<p><strong>3. Is working on GUI alone sufficient?<\/strong><\/p>\r\n<p>I do understand that GUI programming is hard and requires a lot of effort and<br>\r\ncoding. However, in this module project, GUI plays an insignificant role from<br>\r\nthe perspective of learning OOP and software design (apart from learning JavaFX<br>\r\nand GUI programming, which you may enjoy). You can learn almost all of the OOP<br>\r\nand software design we talk about in this module without implementing a GUI.<br>\r\nHence, the weightage for GUI is very minimal. In light of this, if you are<br>\r\nworking only on GUI stuff, you may be at risk.<\/p>\r\n<p>My general suggestion to all of you who are focusing effort on GUI: at least,<br>\r\nensure you have some commands that manipulate the GUI. An example from previous<br>\r\nsemester is that students built a Calendar based app. Then they have commands to<br>\r\nselect months, select a week, select a day, move back and forth in the calendar,<br>\r\nblock out dates in the calendar, etc. This was acceptable and remains<br>\r\nacceptable.<\/p>\r\n<p>If your efforts are directed ONLY towards displaying output generated by other<br>\r\ncommands in the application, then I would say you are at risk. In such cases,<br>\r\nyou may want to think of adding some commands to manipulate the GUI OR implement<br>\r\nsome small command-line based feature that is meaningful in the context of your<br>\r\nproject.<\/p>\r\n<p>As posted on Slack:<\/p>\r\n<blockquote>\r\n<p>If the interaction with the GUI happens via commands, then it should be ok.<br>\r\ni.e., He/she should also take care of processing the command that controls the<br>\r\nGUI behaviour. If working with GUI only means layouting the components, showing<br>\r\noutput of any other command that was not implemented by this person, formatting<br>\r\noutputs, etc., then not so good.<\/p>\r\n<\/blockquote>\r\n<hr>\r\n<p><strong>4. What is end-to-end contribution?<\/strong><\/p>\r\n<p>When I say end-to-end contribution I would expect you to work on most (if not<br>\r\nall) of the components in your software (e.g., UI &#43; Logic &#43; Storage). You can<br>\r\nclearly see that building GUI alone to display the output of other commands is<br>\r\nnot end-to-end, and hence a risky thing to do.<\/p>\r\n<p>How do I achieve this? With the example (UI &#43; Logic &#43; Storage) above:<br>\r\nWhen you implement the command, parsing &#43; doing what the command is supposed to do: covers Logic<br>\r\nShowing output to the user: covers UI<br>\r\nStoring the result of the command in persistent storage: covers Storage<\/p>\r\n<hr>\r\n<p><strong>5. What if I am doing too many things/if I am writing a LOT of code? Do I get extra credit?<\/strong><\/p>\r\n<p>Your lines of code will affect you if the total LoC &lt; 300 lines. However, after<br>\r\ncrossing our threshold of 500 LoC (which is a very low bar), there is no much<br>\r\nsignificance.<\/p>\r\n<p>However, If you carried your team and wrote a significant amount of code (e.g.,<br>\r\n60-70% of the code) for the project, your effort will not go wasted and will be<br>\r\nrecognized. But, I cannot reveal the exact weightage as it concerns grading<br>\r\nmatters.<\/p>\r\n<hr>\r\n<p><strong>6. Project management (PM), how will it be judged?<\/strong><\/p>\r\n<blockquote>\r\n<p>Question on slack: Let us speak hypothetically; for a team, there is only one person<br>\r\nthat is managing milestones, creating and assigning issues, branch protection<br>\r\netc., how will he or she be judged for this contribution?<\/p>\r\n<\/blockquote>\r\n<p>For team activities (e.g., opening &amp; closing milestones) everyone in the team<br>\r\ngets credit irrespective of how much they contribute. (One good strategy I in<br>\r\nthe previous semesters is that the team members share the milestone management,<br>\r\nroughly each team member manages one milestone).<\/p>\r\n<p>Issue management should be a shared responsibility (easiest, you create and<br>\r\nmanage issues you are working on).<\/p>\r\n<p>For tracked contributions like progress in coding, if you did the work alone, the<br>\r\nrest of the team members don't contribute any code (i.e., no merged PRs in the<br>\r\nmilestone), the team doesn't get marks for that. Only you get marks for the<br>\r\nindividual PM component alone. The other team members miss out on both aspects<br>\r\nof PM. If at least 50% of the team (2 in 4 man team, 3 in 5 man team) contribute<br>\r\nsomething, the team gets marks.<\/p>\r\n<p>Thanks,<br>\r\nAkshay<\/p>\r\n<br>\r\n<hr>\r\n<font face=\"Arial\" color=\"Black\" size=\"1\"><br>\r\nImportant: This email is confidential and may be privileged. If you are not the intended recipient, please delete it and notify us immediately; you should not copy or use it for any purpose, nor disclose its contents to any other person. Thank you.<br>\r\n<\/font>\r\n<\/body>\r\n<\/html>\r\n"}}