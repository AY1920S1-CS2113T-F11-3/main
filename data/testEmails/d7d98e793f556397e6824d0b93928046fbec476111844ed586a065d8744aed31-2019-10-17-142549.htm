{"receivedDateTime":"2019-10-17T14:25:49Z","subject":"Re: [nusCS2113-AY1920S1/forum] Which of the following implementations are more object oriented/encouraged? (#75)","@odata.etag":"W/\"CQAAABYAAAAdYQpmLnggSLqRTPf5d3WKAAE8Sk8V\"","from":{"emailAddress":{"address":"notifications@github.com","name":"Jerry"}},"id":"AAMkADdlMWIxZjIxLTM2MzItNGM4ZC05MzM2LWVkM2Y3ZTgzZjhlYwBGAAAAAAAKOW1qChwVQ7G8kcDZ0iuVBwAdYQpmLnggSLqRTPf5d3WKAAAAAAEMAAAdYQpmLnggSLqRTPf5d3WKAAE8h_UCAAA=","body":{"contentType":"html","content":"<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n<meta content=\"text/html; charset=utf-8\">\r\n<\/head>\r\n<body>\r\n<p>I think the answer is Implementation 1. Judging from how you mentioned Class A B and C, it seems that class A does not know the existence of class C. As such, in order to access C, we call a method to access class B, then call a method to access class C.<\/p>\r\n<p style=\"font-size:small; color:#666\">\u2014<br>\r\nYou are receiving this because you are subscribed to this thread.<br>\r\nReply to this email directly, <a href=\"https://github.com/nusCS2113-AY1920S1/forum/issues/75?email_source=notifications&amp;email_token=AKDI2IKYVTG3ZZKXPBE5G5TQPBYWPA5CNFSM4JBWEYQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBQJFKI#issuecomment-543199913\">\r\nview it on GitHub<\/a>, or <a href=\"https://github.com/notifications/unsubscribe-auth/AKDI2INEEXJXTBVNQRIWOYDQPBYWPANCNFSM4JBWEYQA\">\r\nunsubscribe<\/a>.<img src=\"https://github.com/notifications/beacon/AKDI2INT353HUVT7PLIYOI3QPBYWPA5CNFSM4JBWEYQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBQJFKI.gif\" height=\"1\" width=\"1\" alt=\"\"><\/p>\r\n<\/body>\r\n<\/html>\r\n"}}